{"version":3,"sources":["components/UI/Section.module.css","components/Tasks/TaskItem.module.css","components/Tasks/Tasks.module.css","components/NewTask/TaskForm.module.css","components/UI/Section.js","components/Tasks/TaskItem.js","components/Tasks/Tasks.js","hooks/use-http.js","components/NewTask/TaskForm.js","components/NewTask/NewTask.js","App.js","index.js"],"names":["module","exports","Section","props","className","classes","section","children","TaskItem","task","Tasks","taskList","items","length","map","text","id","content","error","onClick","onFetch","loading","container","useHTTP","useState","isLoading","setIsLoading","setError","sendRequest","useCallback","reqConfig","applyData","a","fetch","url","method","headers","body","JSON","stringify","response","ok","Error","json","data","message","TaskForm","taskInputRef","useRef","form","onSubmit","event","preventDefault","enteredValue","current","value","trim","onEnterTask","type","ref","NewTask","sendTaskRequest","createTask","taskText","taskData","createdTask","name","onAddTask","enterTaskHandler","bind","App","tasks","setTasks","fetchTasks","useEffect","tasksObj","loadedTasks","taskKey","push","Fragment","prevTasks","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0fc00bf3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3QN43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"TaskItem_task__1rhm-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tasks_container__2nBq5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TaskForm_form__31W-N\"};","import classes from './Section.module.css';\n\nconst Section = (props) => {\n  return <section className={classes.section}>{props.children}</section>;\n};\n\nexport default Section;\n","import classes from './TaskItem.module.css';\n\nconst TaskItem = (props) => {\n  return <li className={classes.task}>{props.children}</li>\n};\n\nexport default TaskItem;","import Section from '../UI/Section';\nimport TaskItem from './TaskItem';\nimport classes from './Tasks.module.css';\n\nconst Tasks = (props) => {\n  let taskList = <h2>No tasks found. Start adding some!</h2>;\n\n  if (props.items.length > 0) {\n    taskList = (\n      <ul>\n        {props.items.map((task) => (\n          <TaskItem key={task.id}>{task.text}</TaskItem>\n        ))}\n      </ul>\n    );\n  }\n\n  let content = taskList;\n\n  if (props.error) {\n    content = <button onClick={props.onFetch}>Try again</button>;\n  }\n\n  if (props.loading) {\n    content = 'Loading tasks...';\n  }\n\n  return (\n    <Section>\n      <div className={classes.container}>{content}</div>\n    </Section>\n  );\n};\n\nexport default Tasks;\n","import { useCallback, useState } from 'react';\n\nconst useHTTP = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const sendRequest = useCallback(async (reqConfig, applyData) => {\n        setIsLoading(true);\n        setError(null);\n        try {\n            const response = await fetch(reqConfig.url, {\n                method: reqConfig.method ? reqConfig.method : 'GET',\n                headers: reqConfig.headers ? reqConfig.headers : {},\n                body: reqConfig.body ? JSON.stringify(reqConfig.body) : null,\n            });\n\n            if (!response.ok) {\n                throw new Error('Request failed!');\n            }\n\n            const data = await response.json();\n            applyData(data);\n        }\n        catch (err) {\n            setError(err.message || 'Something went wrong!');\n        }\n        setIsLoading(false);\n    }, []);\n\n    return { isLoading, error, sendRequest };\n};\n\nexport default useHTTP;\n","import { useRef } from 'react';\n\nimport classes from './TaskForm.module.css';\n\nconst TaskForm = (props) => {\n  const taskInputRef = useRef();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredValue = taskInputRef.current.value;\n\n    if (enteredValue.trim().length > 0) {\n      props.onEnterTask(enteredValue);\n    }\n\n    taskInputRef.current.value = ''\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <input type='text' ref={taskInputRef} />\n      <button>{props.loading ? 'Sending...' : 'Add Task'}</button>\n    </form>\n  );\n};\n\nexport default TaskForm;\n","import useHTTP from '../../hooks/use-http';\n\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\n\nconst NewTask = (props) => {\n  \n  const {isLoading, error, sendRequest: sendTaskRequest} = useHTTP();\n\n  const createTask = (taskText, taskData) => {\n      const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n\n      props.onAddTask(createdTask);\n  };\n\n  const enterTaskHandler = async (taskText) => {\n\n    sendTaskRequest({\n        url: 'https://react-http-678ba-default-rtdb.firebaseio.com/tasks.json',\n        method: 'POST',\n        body: { text: taskText },\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    }, \n    createTask.bind(null, taskText)\n    );\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n","import React, { useEffect, useState } from 'react';\n\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHTTP from './hooks/use-http';\n\nfunction App() {\n    const [tasks, setTasks] = useState([]);\n\n    const url = 'https://react-http-678ba-default-rtdb.firebaseio.com/tasks.json';\n\n    const { isLoading, error, sendRequest: fetchTasks } = useHTTP();\n\n    useEffect(() => {\n        const transformTasks = (tasksObj) => {\n            const loadedTasks = [];\n            for (const taskKey in tasksObj) {\n                loadedTasks.push({ id: taskKey, text: tasksObj[taskKey].text });\n            }\n            setTasks(loadedTasks);\n        };\n        fetchTasks({ url: url }, transformTasks);\n    }, [fetchTasks]);\n\n    const taskAddHandler = (task) => {\n        setTasks((prevTasks) => prevTasks.concat(task));\n    };\n\n    return (\n        <React.Fragment>\n            <NewTask onAddTask={taskAddHandler} />\n            <Tasks\n                items={tasks}\n                loading={isLoading}\n                error={error}\n                onFetch={fetchTasks}\n            />\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}